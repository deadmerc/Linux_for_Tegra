variables:
  CONFIG: "" 
  BOARDID: ""
  BOARDSKU: ""
  FAB: ""
  BOARDREV: ""
  CHIP_SKU: ""
  IS_CUSTOM: "0" #disable custom image build by default

stages:
  - reserver-industrial-orin-nano-4g-j401
  - reserver-industrial-orin-nano-8g-j401
  - reserver-industrial-orin-nx-16g-j401
  - reserver-industrial-orin-nx-8g-j401
  - recomputer-industrial-orin-nano-4g-j201
  - recomputer-industrial-orin-nano-8g-j201
  - recomputer-industrial-orin-nx-16g-j201
  - recomputer-industrial-orin-nx-8g-j201
  - recomputer-orin-nano-4g-j401
  - recomputer-orin-nano-8g-j401
  - recomputer-orin-nx-16g-j401
  - recomputer-orin-nx-8g-j401
  - reserver-agx-orin-32g-j501
  - reserver-agx-orin-32g-j501-gmsl
  - reserver-agx-orin-64g-j501
  - reserver-agx-orin-64g-j501-gmsl
  - custom-firmware

# common code of building target image
.build_image: &build_image_script
  - > 
    if [ -z "$CONFIG" ]; then echo "Error: CONFIG variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - > 
    if [ -z "$BOARDID" ]; then echo "Error: BOARDID variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - > 
    if [ -z "$BOARDSKU" ]; then echo "Error: BOARDSKU variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - > 
    if [ -z "$FAB" ]; then echo "Error: FAB variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - > 
    if [ -z "$BOARDREV" ]; then echo "Error: BOARDREV variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - > 
    if [ -z "$CHIP_SKU" ]; then echo "Error: CHIP_SKU variable is empty, Please setup it before enable this CI!"; exit 1; fi
  - echo "config details, CONFIG $CONFIG,BOARDID $BOARDID,BOARDSKU $BOARDSKU,FAB $FAB,BOARDREV $BOARDREV,CHIP_SKU $CHIP_SKU"
  - git submodule sync
  - git submodule update --init --recursive
  - id 
  - export DATE_STR=$(TZ='Asia/Hong_Kong' date +%Y-%m-%d)
  # clean the rootfs for every image
  - ls rootfs/ -l
  - rm -rf rootfs/*
  - wget  http://192.168.1.77/jetson/tegra_linux_sample-root-filesystem_r36.3.0_aarch64.tbz2 -q
  - tar xpf tegra_linux_sample-root-filesystem_r36.3.0_aarch64.tbz2 -C rootfs
  # this is special for jetson orin nano 4g
  - >
    if [[ $BOARDID == "3767" && $BOARDSKU == "0004" ]]; then
      cp -v extra_scripts/chip_info.bin_bak bootloader/chip_info.bin_bak
    fi
  # apply necessary changes to rootfs
  - ./apply_binaries.sh
  # prepare the compile toolchains
  - wget  http://192.168.1.77/jetson/aarch64--glibc--stable-2022.08-1.tar.bz2 -q
  - mkdir -p l4t-gcc
  - tar xf aarch64--glibc--stable-2022.08-1.tar.bz2 -C ./l4t-gcc
  - export ARCH=arm64
  - export CROSS_COMPILE=`realpath .`/l4t-gcc/aarch64--glibc--stable-2022.08-1/bin/aarch64-buildroot-linux-gnu-
  # build the kernel
  - cd source/
  - ./nvbuild.sh
  # deploy new kernel and dtb
  - ./do_copy.sh
  # deploy new kernel drviers
  - export INSTALL_MOD_PATH=`realpath ../rootfs/`
  - ./nvbuild.sh -i
  # package the image for qspi flash
  - cd ..
  - sudo BOARDID=$BOARDID BOARDSKU=$BOARDSKU FAB=$FAB BOARDREV=$BOARDREV CHIP_SKU=$CHIP_SKU ./tools/kernel_flash/l4t_initrd_flash.sh -p "-c bootloader/generic/cfg/flash_t234_qspi.xml --no-systemimg" --no-flash --massflash 5 --network usb0 $CONFIG external
  # upload image of qspi
  - mkdir deploy
  - mount -t cifs -o username=$SMB_USER,password=$SMB_PWD,vers=3.0,uid=`id -u`,gid=`id -g`,rw,file_mode=0664 //192.168.1.77/red_2t/jetson deploy
  - cp mfi_$CONFIG.tar.gz deploy/mfi_$CI_JOB_STAGE-qspiflash-6.0-36.3.0-$DATE_STR.tar.gz || true
  - umount deploy
  # install user custom package(optional)
  - sed -i "s/<SOC>/t234/g" rootfs/etc/apt/sources.list.d/nvidia-l4t-apt-source.list
  - mount --bind /sys ./rootfs/sys
  - mount --bind /dev ./rootfs/dev
  - mount --bind /dev/pts ./rootfs/dev/pts
  - mount --bind /proc ./rootfs/proc
  - cp /usr/bin/qemu-aarch64-static rootfs/usr/bin/
  - cp extra_scripts/rootfs_magic.sh rootfs
  - chroot rootfs /rootfs_magic.sh || true
  - umount ./rootfs/sys
  - umount ./rootfs/dev/pts
  - umount ./rootfs/dev
  - umount ./rootfs/proc
  - rm rootfs/rootfs_magic.sh
  - rm rootfs/usr/bin/qemu-aarch64-static
  # package the image for qspi & nvme flash
  - sudo BOARDID=$BOARDID BOARDSKU=$BOARDSKU FAB=$FAB BOARDREV=$BOARDREV CHIP_SKU=$CHIP_SKU ./tools/kernel_flash/l4t_initrd_flash.sh --external-device nvme0n1p1 -c tools/kernel_flash/flash_l4t_nvme.xml -S 80GiB -p "-c bootloader/generic/cfg/flash_t234_qspi.xml --no-systemimg" --no-flash --massflash 5 --network usb0 $CONFIG external
  # upload image of qspi & nvme ssd
  - mount -t cifs -o username=$SMB_USER,password=$SMB_PWD,vers=3.0,uid=`id -u`,gid=`id -g`,rw,file_mode=0664 //192.168.1.77/red_2t/jetson deploy 
  - cp mfi_$CONFIG.tar.gz deploy/mfi_$CI_JOB_STAGE-6.0-36.3.0-$DATE_STR.tar.gz || true
  - umount deploy

build-reserver-industrial-orin-nano-4g-j401:
  stage: reserver-industrial-orin-nano-4g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-industrial-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0004"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-reserver-industrial-orin-nano-8g-j401:
  stage: reserver-industrial-orin-nano-8g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-industrial-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0003"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  needs: [build-reserver-industrial-orin-nano-4g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-reserver-industrial-orin-nx-16g-j401:
  stage: reserver-industrial-orin-nx-16g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-industrial-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0000"
    FAB: "300"
    BOARDREV: "G.3"
    CHIP_SKU: "00:00:00:D3"

  needs: [build-reserver-industrial-orin-nano-8g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-reserver-industrial-orin-nx-8g-j401:
  stage: reserver-industrial-orin-nx-8g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-industrial-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0001"
    FAB: "300"
    BOARDREV: "M.3"
    CHIP_SKU: "00:00:00:D4"

  needs: [build-reserver-industrial-orin-nx-16g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-industrial-orin-nano-4g-j201:
  stage: recomputer-industrial-orin-nano-4g-j201 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-industrial-orin-j201"
    BOARDID: "3767"
    BOARDSKU: "0004"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  needs: [build-reserver-industrial-orin-nx-8g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-industrial-orin-nano-8g-j201:
  stage: recomputer-industrial-orin-nano-8g-j201 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-industrial-orin-j201"
    BOARDID: "3767"
    BOARDSKU: "0003"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  needs: [build-recomputer-industrial-orin-nano-4g-j201]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-industrial-orin-nx-16g-j201:
  stage: recomputer-industrial-orin-nx-16g-j201 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-industrial-orin-j201"
    BOARDID: "3767"
    BOARDSKU: "0000"
    FAB: "300"
    BOARDREV: "G.3"
    CHIP_SKU: "00:00:00:D3"

  needs: [build-recomputer-industrial-orin-nano-8g-j201]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-industrial-orin-nx-8g-j201:
  stage: recomputer-industrial-orin-nx-8g-j201 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-industrial-orin-j201"
    BOARDID: "3767"
    BOARDSKU: "0001"
    FAB: "300"
    BOARDREV: "M.3"
    CHIP_SKU: "00:00:00:D4"

  needs: [build-recomputer-industrial-orin-nx-16g-j201]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-orin-nano-4g-j401:
  stage: recomputer-orin-nano-4g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0004"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  needs: [build-recomputer-industrial-orin-nx-8g-j201]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-orin-nano-8g-j401:
  stage: recomputer-orin-nano-8g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0003"
    FAB: "300"
    BOARDREV: "N.2"
    CHIP_SKU: "00:00:00:D6"

  needs: [build-recomputer-orin-nano-4g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-orin-nx-16g-j401:
  stage: recomputer-orin-nx-16g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0000"
    FAB: "300"
    BOARDREV: "G.3"
    CHIP_SKU: "00:00:00:D3"

  needs: [build-recomputer-orin-nano-8g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

build-recomputer-orin-nx-8g-j401:
  stage: recomputer-orin-nx-8g-j401 
  rules:
    - if: '$CI_COMMIT_TAG' 
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "recomputer-orin-j401"
    BOARDID: "3767"
    BOARDSKU: "0001"
    FAB: "300"
    BOARDREV: "M.3"
    CHIP_SKU: "00:00:00:D4"

  needs: [build-recomputer-orin-nx-16g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script


reserver-agx-orin-32g-j501:
  stage: reserver-agx-orin-32g-j501
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-agx-orin-j501x"
    BOARDID: "3701"
    BOARDSKU: "0004"
    FAB: "500"
    BOARDREV: "J.0"
    CHIP_SKU: "00:00:00:D2"

  needs: [build-recomputer-orin-nx-8g-j401]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script


reserver-agx-orin-32g-j501-gmsl:
  stage: reserver-agx-orin-32g-j501-gmsl
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-agx-orin-j501x-gmsl"
    BOARDID: "3701"
    BOARDSKU: "0004"
    FAB: "500"
    BOARDREV: "J.0"
    CHIP_SKU: "00:00:00:D2"

  needs: [reserver-agx-orin-32g-j501]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

reserver-agx-orin-64g-j501:
  stage: reserver-agx-orin-64g-j501
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-agx-orin-j501x"
    BOARDID: "3701"
    BOARDSKU: "0005"
    FAB: "500"
    BOARDREV: "M.0"
    CHIP_SKU: "00:00:00:D0"

  needs: [reserver-agx-orin-32g-j501-gmsl]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script

reserver-agx-orin-64g-j501-gmsl:
  stage: reserver-agx-orin-64g-j501-gmsl
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
  tags:
    - x86-shell
  variables:
    CONFIG: "reserver-agx-orin-j501x-gmsl"
    BOARDID: "3701"
    BOARDSKU: "0005"
    FAB: "500"
    BOARDREV: "M.0"
    CHIP_SKU: "00:00:00:D0"

  needs: [reserver-agx-orin-64g-j501]

  script:
    - echo "Building for $CONFIG"
    - *build_image_script


build-custom-firmare:
   stage: custom-firmware
   rules:
     - if: '$IS_CUSTOM == "1"'
       when: on_success 
     - if: '$CI_COMMIT_TAG'
       when: never 
   tags:
     - x86-shell

   script:
    - echo "Building custom image for $CONFIG"
    - *build_image_script

